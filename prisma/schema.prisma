// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  entries   DailyJournalEntry[]
  summaries MontlyEntrySummary[]
  goals     GoalsAndSuggestions[]
  insights  Insights[]
  reflections Reflections[]
}

model DailyJournalEntry {
  id        String   @id @default(cuid())
  date      DateTime @default(now())
  content   String
  mood      String   // Predefined mood stored as a simple string
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])  
  tags      DailyJournalEntryTag[] // Connects through DailyJournalEntryTag
}

model Tag {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  entries   DailyJournalEntryTag[] // Connects through DailyJournalEntryTag
}

model DailyJournalEntryTag { 
  id        String   @id @default(cuid())
  entryId   String
  tagId     String
  entry     DailyJournalEntry @relation(fields: [entryId], references: [id])
  tag       Tag               @relation(fields: [tagId], references: [id])
  @@unique([entryId, tagId]) 
}

model MontlyEntrySummary {
  id        String   @id @default(cuid())
  date      DateTime @default(now())
  content   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  monthYear String
}

model GoalsAndSuggestions {
  id        String   @id @default(cuid())
  content   Json
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Insights {
  id         String   @id @default(cuid())
  insights   Json
  keyThemes  Json
  userId     String
  monthYear  String
  user       User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Reflections{
  id        String   @id @default(cuid())
  content   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}